src_dir = .
config_dir = config.app.json
celery_app = app.task.celery_app
app_name = default
ngrok_url = https://elegant-gazelle-leading.ngrok-free.app

################################     VIRTUAL ENVIRONNEMENT            ###################################
install	:
	pip install -r requirements_dev.txt

cleandep:
	pipreqs --clean requirements_dev.txt

getdep: 
	pip freeze > requirements_dev.txt

venv:
	python -m venv .venv
	python -m pip install --upgrade pip
	pip install -r requirements_dev.txt

activate:
	.\.venv\Scripts\Activate

deactivate:
	deactivate

################################   ENV AND CACHE              ###################################

setenv:
	cp base.env .env

clean:
	find . -name "__pycache__" -type d -exec rm -rf {} +
	find . -name "*.pyc" -type f -delete

###############################     HTTPS               #######################################

https_pem:
	openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes


###############################      RUNNING THE CODE IN DEV MODE                     #######################################

run_dev:
	python ${src_dir}/main.py --config=${config_dir} --port=-1

run_prod:
	uvicorn main:app --workers 4 --port 8088


###############################      CELERY                     #######################################


celery:
	celery -A ${celery_app} worker --pool=solo --loglevel=info 

celery-docker:
	celery -A ${celery_app} worker --pool=gevent --concurrency=100  --loglevel=info --max-tasks-per-child=2000 --max-memory-per-child=200000

flower:
	celery -A ${celery_app} flower --port=5555

redbeat:
	celery -A ${celery_app} beat -S redbeat.RedBeatScheduler --max-interval 30 --loglevel=info

purge:
	celery -A ${celery_app} purge

###############################     NGROK                      #######################################


tunnel:
	ngrok http --url ${ngrok_url} 8088

tunnel_lb:
	ngrok http --url ${ngrok_url} 8080

###############################     DOCKER            #######################################

docker-worker:
	docker-compose up -d --no-deps --scale worker=3 worker

