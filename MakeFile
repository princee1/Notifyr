src_dir = .
config_dir = config.app.json
celery_app = app.task.celery_app
app_name = Notifyr

install	:
	pip install -r requirements_dev.txt

cleandep:
	pipreqs --clean requirements_dev.txt

getdep: 
	pipreqs --savepath requirements_dev.txt --force app/

setenv:
	cp base.env .env

clean:
	find . -name "__pycache__" -type d -exec rm -rf {} +
	find . -name "*.pyc" -type f -delete

venv:
	python -m venv .venv
	python -m pip install --upgrade pip
	pip install -r requirements_dev.txt

activate:
	.\.venv\Scripts\Activate

deactivate:
	deactivate

del_venv:
	echo testing

https_pem:
	 openssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 -nodes

run_dev:
	python ${src_dir}/main.py --config=${config_dir} --name=${app_name}

run_prod:
	uvicorn main:app --workers 4 --port 8088

create :
	python ${src_dir}/main.py --config=${config_dir} --mode=create --name=${app_name}

edit:
	python ${src_dir}/main.py --config=${config_dir} --mode=edit --name=${app_name}

register:
	python ${src_dir}/main.py --config=${config_dir} --mode=register --name=${app_name}

docker:
	docker-compose up --build

celery:
	celery -A ${celery_app} worker --pool=solo --loglevel=info

flower:
	celery -A ${celery_app} flower --port=5555

redbeat:
	celery -A ${celery_app} beat -S redbeat.RedBeatScheduler --max-interval 30 --loglevel=info

purge:
	celery -A ${celery_app} purge
