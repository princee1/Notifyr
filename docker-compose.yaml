
services:
  redis:
    image: redis #Queue for the taks
    container_name: redis
    restart: always
    ports:
      - 6379:6379
  

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    
  mongodb:
    image: mongo:latest
    container_name: my-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  
  postgres:
    build:
      context: ./docker/
      dockerfile: Dockerfile.postgres
    image: postgres:15
    container_name: my-postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    hostname: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:8088"
    depends_on:
      - postgres
    
  celery:
    image: python:3.11
    command: ["make", "celery"]
    container_name: celery_worker
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - redis-commander
    deploy:
      replicas: 5
    
  redbeat:
    container_name: redbeat
    image: python:3.11
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - redis
      - redis-commander
    command: ["make ", "redbeat"]
    
  flower:
    image: python:3.11
    command: ["make", "flower"]
    container_name: flower
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
      - redis-commander
    ports:
      - "5555:5555"


volumes:
  mongo-data:
    driver: local

  postgres-data:
    driver: local

  assets-data:
    driver: local